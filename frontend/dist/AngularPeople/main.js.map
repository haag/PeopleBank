{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.scss","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-person/create-person.component.html","webpack:///./src/app/create-person/create-person.component.scss","webpack:///./src/app/create-person/create-person.component.ts","webpack:///./src/app/create-person/person.service.ts","webpack:///./src/app/create-person/person.ts","webpack:///./src/app/edit-person/edit-person.component.html","webpack:///./src/app/edit-person/edit-person.component.scss","webpack:///./src/app/edit-person/edit-person.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/material.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.scss","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/test/hero.service.ts","webpack:///./src/app/test/hero.ts","webpack:///./src/app/test/test.component.html","webpack:///./src/app/test/test.component.scss","webpack:///./src/app/test/test.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n    <div>\\r\\n        <ul class=\\\"people\\\">\\r\\n          <li *ngFor=\\\"let person of people\\\" (click)=\\\"openEditDialog(person)\\\" [class.selected]=\\\"person === selectedPerson\\\">\\r\\n        \\r\\n\\r\\n\\r\\n            <button class=\\\"delete-button\\\" (click)=\\\"deletePerson(person)\\\">Delete</button>\\r\\n            <div class=\\\"person-element\\\">\\r\\n              <div class=\\\"badge\\\">{{person.id}}</div>\\r\\n              <div class=\\\"name\\\">{{person.name}}</div>\\r\\n              <div class=\\\"saying\\\">{{person.saying}}</div>\\r\\n            </div>\\r\\n          </li>\\r\\n        </ul>\\r\\n        <div class=\\\"editarea\\\">\\r\\n          <div *ngIf=\\\"selectedPerson\\\">\\r\\n            <div class=\\\"editfields\\\">\\r\\n              <div>\\r\\n                <label>id: </label>\\r\\n                <input [(ngModel)]=\\\"selectedPerson.id\\\" placeholder=\\\"id\\\" *ngIf=\\\"addingPerson\\\" />\\r\\n                <label *ngIf=\\\"!addingPerson\\\" class=\\\"value\\\">{{selectedPerson.id}}</label>\\r\\n              </div>\\r\\n              <div>\\r\\n                <label>name: </label>\\r\\n                <input [(ngModel)]=\\\"selectedPerson.name\\\" placeholder=\\\"name\\\" />\\r\\n              </div>\\r\\n              <div>\\r\\n                <label>saying: </label>\\r\\n                <input [(ngModel)]=\\\"selectedPerson.saying\\\" placeholder=\\\"saying\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n            <button (click)=\\\"save()\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n    \\r\\n\\r\\n\\r\\n  <ol>\\r\\n    <!-- <li>\\r\\n      <mat-form-field>\\r\\n        <input matInput [(ngModel)]=\\\"name\\\" placeholder=\\\"What's your name?\\\">\\r\\n      </mat-form-field>\\r\\n    </li> -->\\r\\n    <li>\\r\\n      <button mat-raised-button (click)=\\\"openCreateDialog()\\\">Create New Person</button>\\r\\n    </li>\\r\\n</ol>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport { CreatePersonComponent } from '../create-person/create-person.component';\r\nimport { EditPersonComponent } from '../edit-person/edit-person.component'\r\n\r\nimport { Person } from '../create-person/person';\r\nimport { PersonService } from '../create-person/person.service';\r\nimport {FormControl, Validators} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n  constructor(private personService: PersonService, public dialog: MatDialog) { }\r\n\r\n  name = new FormControl('', [Validators.required, Validators.email]);\r\n  \r\n  addingPerson = false;\r\n  people: any = [];\r\n  selectedPerson: Person;\r\n  \r\n  \r\n  openCreateDialog(): void {\r\n    const dialogRef = this.dialog.open(CreatePersonComponent, { });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  };\r\n\r\n  openEditDialog(prop) {\r\n  \r\n    const dialogRef = this.dialog.open(EditPersonComponent);\r\n\r\n    let instance = dialogRef.componentInstance;\r\n    instance.person = prop;\r\n    \r\n    console.log('dialogRef', dialogRef);\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  };\r\n\r\n\r\n  ngOnInit() {\r\n  this.getPeople();\r\n}\r\n\r\nenableAddMode() {\r\n  this.addingPerson = true;\r\n  this.selectedPerson = new Person();\r\n}\r\n\r\ncancel() {\r\n  this.addingPerson = false;\r\n  this.selectedPerson = null;\r\n}\r\n\r\ndeletePerson(person: Person) {\r\n  this.personService.deletePerson(person).subscribe(res => {\r\n    this.people = this.people.filter(h => h !== person);\r\n    if (this.selectedPerson === person) {\r\n      this.selectedPerson = null;\r\n    }\r\n  });\r\n}\r\n\r\ngetPeople() {\r\n  return this.personService.getPeople().subscribe(people => {\r\n    this.people = people;\r\n  });\r\n}\r\n\r\n\r\nonSelect(person: Person) {\r\n  this.addingPerson = false;\r\n  this.selectedPerson = person;\r\n}\r\n\r\nsave() {\r\n  if (this.addingPerson) {\r\n    this.personService.addPerson(this.selectedPerson).subscribe(person => {\r\n      this.addingPerson = false;\r\n      this.selectedPerson = null;\r\n      this.people.push(person);\r\n    });\r\n  } else {\r\n    this.personService.updatePerson(this.selectedPerson).subscribe(person => {\r\n      this.addingPerson = false;\r\n      this.selectedPerson = null;\r\n    });\r\n  }\r\n}\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AboutComponent } from './about/about.component'\r\nimport { HomeComponent } from './home/home.component'\r\nimport { TESTComponent } from './test/test.component'\r\nimport { EditPersonComponent } from './edit-person/edit-person.component'\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent},\r\n  { path: 'about', component: AboutComponent},\r\n  { path: 'test', component: TESTComponent},\r\n  { path: 'edit', component: EditPersonComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<app-nav></app-nav>\\r\\n\\r\\n<section>\\r\\n  <router-outlet></router-outlet>\\r\\n</section>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'AngularPeople';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { TESTComponent } from './test/test.component';\r\nimport { HeroService } from './test/hero.service';\r\nimport { CreatePersonComponent } from './create-person/create-person.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material';\r\nimport { PersonService } from './create-person/person.service';\r\nimport { EditPersonComponent } from './edit-person/edit-person.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    AboutComponent,\r\n    TESTComponent,\r\n    CreatePersonComponent,\r\n    EditPersonComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    MaterialModule,\r\n    BrowserAnimationsModule,\r\n\r\n  ],\r\n  entryComponents: [\r\n    CreatePersonComponent,\r\n    EditPersonComponent\r\n  ],\r\n  providers: [HeroService, PersonService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<!-- <div class=\\\"example-container\\\">\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Enter your email\\\" [formControl]=\\\"email\\\" required>\\n      <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n    </mat-form-field>\\n  </div> -->\\n\\n\\n  <!-- <p>\\n  View works! o?\\n  </p>\\n  <div>\\n      <ul class=\\\"people\\\">\\n        <li *ngFor=\\\"let person of people\\\" (click)=\\\"onSelect(person)\\\" [class.selected]=\\\"person === selectedPerson\\\">\\n          <button class=\\\"delete-button\\\" (click)=\\\"deletePerson(person)\\\">Delete</button>\\n          <div class=\\\"person-element\\\">\\n            <div class=\\\"badge\\\">{{person.id}}</div>\\n            <div class=\\\"name\\\">{{person.name}}</div>\\n            <div class=\\\"saying\\\">{{person.saying}}</div>\\n          </div>\\n        </li>\\n      </ul>\\n      <div class=\\\"editarea\\\">\\n        <div *ngIf=\\\"selectedPerson\\\">\\n          <div class=\\\"editfields\\\">\\n            <div>\\n              <label>id: </label>\\n              <input [(ngModel)]=\\\"selectedPerson.id\\\" placeholder=\\\"id\\\" *ngIf=\\\"addingPerson\\\" />\\n              <label *ngIf=\\\"!addingPerson\\\" class=\\\"value\\\">{{selectedPerson.id}}</label>\\n            </div>\\n            <div>\\n              <label>name: </label>\\n              <input [(ngModel)]=\\\"selectedPerson.name\\\" placeholder=\\\"name\\\" />\\n            </div>\\n            <div>\\n              <label>saying: </label>\\n              <input [(ngModel)]=\\\"selectedPerson.saying\\\" placeholder=\\\"saying\\\" />\\n            </div>\\n          </div>\\n          <button (click)=\\\"cancel()\\\">Cancel</button>\\n          <button (click)=\\\"save()\\\">Save</button>\\n        </div>\\n      </div>\\n    </div>\\n     -->\\n\\n      <div>\\n          <div class=\\\"editarea\\\">\\n            <div *ngIf=\\\"selectedPerson\\\">\\n              <div class=\\\"editfields\\\">\\n                <div>\\n                  <label>id: </label>\\n                  <input [(ngModel)]=\\\"selectedPerson.id\\\" placeholder=\\\"id\\\" *ngIf=\\\"addingPerson\\\" />\\n                  <label *ngIf=\\\"!addingPerson\\\" class=\\\"value\\\">{{selectedPerson.id}}</label>\\n                </div>\\n                <div>\\n                  <label>name: </label>\\n                  <input [(ngModel)]=\\\"selectedPerson.name\\\" placeholder=\\\"name\\\" />\\n                </div>\\n                <div>\\n                  <label>saying: </label>\\n                  <input [(ngModel)]=\\\"selectedPerson.saying\\\" placeholder=\\\"saying\\\" />\\n                </div>\\n              </div>\\n              <button (click)=\\\"cancel()\\\">Cancel</button>\\n              <button (click)=\\\"save()\\\">Save</button>\\n            </div>\\n          </div>\\n        </div>\\n        \"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.example-container > * {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlLXBlcnNvbi9DOlxcVXNlcnNcXGJxeHA4M1xcRGVza3RvcFxcTUNvZGVcXFBlb3BsZUJhbmtcXGZyb250ZW5kL3NyY1xcYXBwXFxjcmVhdGUtcGVyc29uXFxjcmVhdGUtcGVyc29uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBYTtFQUNiLHNCQUFzQixFQUFBOztBQUd4QjtFQUNFLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1wZXJzb24vY3JlYXRlLXBlcnNvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtY29udGFpbmVyID4gKiB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Person } from './person';\nimport { PersonService } from './person.service';\nimport {FormControl, Validators} from '@angular/forms';\nimport { MatDialog } from '@angular/material';\n\n\n@Component({\n  selector: 'app-create-person',\n  templateUrl: './create-person.component.html',\n  styleUrls: ['./create-person.component.scss']\n})\nexport class CreatePersonComponent implements OnInit {\n  name = new FormControl('', [Validators.required, Validators.email]);\n  addingPerson = true;\n  editingPerson = false;\n  people: any = [];\n  selectedPerson: Person;\n \n  \n  //MatDialog added so that the dialog is closed upon save()\n  constructor(private personService: PersonService, public dialog: MatDialog) {}\n  \n  ngOnInit() {\n    this.selectedPerson = new Person();\n  }\n  \n  cancel() {\n    this.addingPerson = false;\n    this.selectedPerson = null;\n    this.dialog.closeAll();\n  }\n  \n  onSelect(person: Person) {\n    this.selectedPerson = person;\n  }\n\n  \n  update() {\n    this.personService.updatePerson(this.selectedPerson).subscribe(person => {\n      this.addingPerson = false;\n      this.selectedPerson = null;\n    });\n  }\n\n  save() {\n      this.personService.addPerson(this.selectedPerson).subscribe(person => {\n        // this.addingPerson = false;\n        // this.selectedPerson = null;\n        this.people.push(person);\n        this.dialog.closeAll();\n      });\n  }\n}\n\n//ERROR HANDLING\n// getErrorMessage() {\n  //   return this.name.hasError('required') ? 'You must enter a value' :\n  //       this.name.hasError('name') ? 'Not a valid name' :\n  //           '';\n  // }","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Person } from './person';\r\n\r\nconst api = '/api';\r\nconst baseURL = 'http://localhost:4000';\r\n\r\n@Injectable()\r\nexport class PersonService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n    getPeople() {\r\n      return this.http.get<Array<Person>>(`${baseURL}${api}/people`);\r\n    }\r\n  \r\n    addPerson(person: Person) {\r\n      return this.http.post<Person>(`${baseURL}${api}/person/`, person);\r\n    }\r\n    \r\n    updatePerson(person: Person) {\r\n      return this.http.put<Person>(`${baseURL}${api}/person/${person.id}`, person);\r\n    }\r\n    \r\n    deletePerson(person: Person) {\r\n      return this.http.delete(`${baseURL}${api}/person/${person.id}`);\r\n    }\r\n\r\n}\r\n    ","export class Person {\r\n    id: number;\r\n    name: string;\r\n  }\r\n  ","module.exports = \"\\n<div>\\n    <div class=\\\"editarea\\\">\\n      <div *ngIf=\\\"selectedPerson\\\">\\n        <div class=\\\"editfields\\\">\\n          <div>\\n            <label>id: </label>\\n            <input [(ngModel)]=\\\"selectedPerson.id\\\" placeholder=\\\"id\\\" *ngIf=\\\"addingPerson\\\" />\\n            <label class=\\\"value\\\">{{selectedPerson.id}}</label>\\n          </div>\\n          <div>\\n            <label>name: </label>\\n            <input [(ngModel)]=\\\"selectedPerson.name\\\" placeholder=\\\"name\\\" />\\n          </div>\\n          <div>\\n            <label>saying: </label>\\n            <input [(ngModel)]=\\\"selectedPerson.saying\\\" placeholder=\\\"saying\\\" />\\n          </div>\\n        </div>\\n        <button (click)=\\\"cancel()\\\">Cancel</button>\\n        <button (click)=\\\"save()\\\">Save</button>\\n      </div>\\n    </div>\\n</div>\\n    \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtcGVyc29uL2VkaXQtcGVyc29uLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Person } from '../create-person/person';\nimport { PersonService } from '../create-person/person.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'app-edit-person',\n  templateUrl: './edit-person.component.html',\n  styleUrls: ['./edit-person.component.scss']\n})\n\nexport class EditPersonComponent implements OnInit {\n\n  name = new FormControl('', [Validators.required, Validators.email]);\n\n  people: any = [];\n  selectedPerson: Person;\n  person: Person;\n\n  constructor(private personService: PersonService, public dialog: MatDialog) {}\n\n  ngOnInit() {\n    this.getPeople();\n    this.onSelect()\n  }\n\n  enableAddMode() {\n    this.selectedPerson = new Person();\n  }\n  \n  cancel() {\n    this.selectedPerson = null;\n  }\n\n  deletePerson(person: Person) {\n    this.personService.deletePerson(person).subscribe(res => {\n      this.people = this.people.filter(h => h !== person);\n      if (this.selectedPerson === person) {\n        this.selectedPerson = null;\n      }\n    });\n  }\n\n  getPeople() {\n    return this.personService.getPeople().subscribe(people => {\n      this.people = people;\n    });\n  }\n\n\n  onSelect() {\n    this.selectedPerson = this.person;\n  }\n\n  save() {\n      this.personService.updatePerson(this.selectedPerson).subscribe(person => {\n        this.selectedPerson = null;\n        this.dialog.closeAll();\n      });\n    }\n}\n\n\n  //ERROR HANDLING\n  // getErrorMessage() {\n  //   return this.name.hasError('required') ? 'You must enter a value' :\n  //       this.name.hasError('name') ? 'Not a valid name' :\n  //           '';\n  // }\n\n\n//   name = new FormControl('', [Validators.required, Validators.email]);\n\n//   addingPerson = false;\n//   people: any = [];\n//   selectedPerson: Person;\n\n//   constructor(private personService: PersonService) {}\n\n//   ngOnInit() {\n//     this.getPeople();\n//   }\n\n//   enableAddMode() {\n//     this.addingPerson = true;\n//     this.selectedPerson = new Person();\n//   }\n  \n//   cancel() {\n//     this.addingPerson = false;\n//     this.selectedPerson = null;\n//   }\n\n//   deletePerson(person: Person) {\n//     this.personService.deletePerson(person).subscribe(res => {\n//       this.people = this.people.filter(h => h !== person);\n//       if (this.selectedPerson === person) {\n//         this.selectedPerson = null;\n//       }\n//     });\n//   }\n\n//   getPeople() {\n//     return this.personService.getPeople().subscribe(people => {\n//       this.people = people;\n//     });\n//   }\n\n\n//   onSelect(person: Person) {\n//     this.addingPerson = false;\n//     this.selectedPerson = person;\n//   }\n\n//   save() {\n//     if (this.addingPerson) {\n//       this.personService.addPerson(this.selectedPerson).subscribe(person => {\n//         this.addingPerson = false;\n//         this.selectedPerson = null;\n//         this.people.push(person);\n//       });\n//     } else {\n//       this.personService.updatePerson(this.selectedPerson).subscribe(person => {\n//         this.addingPerson = false;\n//         this.selectedPerson = null;\n//       });\n//     }\n//   }\n// }","module.exports = \"<p>\\r\\n  home works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {MatButtonModule, MatCheckboxModule} from '@angular/material';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { MatFormFieldModule, MatInputModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [ MatInputModule, MatFormFieldModule, MatButtonModule, MatCheckboxModule, MatDialogModule, MatIconModule],\r\n  exports: [ MatInputModule, MatFormFieldModule, MatButtonModule, MatCheckboxModule, MatDialogModule, MatIconModule],\r\n\r\n})\r\nexport class MaterialModule { }","module.exports = \"<header>\\r\\n    <div class=\\\"container\\\">\\r\\n      <a routerLink=\\\"/\\\" class=\\\"logo\\\">AngularPeople</a>\\r\\n      <nav>\\r\\n        <ul>\\r\\n          <li><a routerLink=\\\"/\\\">Home</a></li>\\r\\n          <li><a routerLink=\\\"/test\\\">TEST</a></li>\\r\\n          <li><a routerLink=\\\"/about\\\">About</a></li>\\r\\n          <li><a routerLink=\\\"/edit\\\">Edit</a></li>\\r\\n        </ul>\\r\\n      </nav>\\r\\n    </div>\\r\\n  </header>\\r\\n\"","module.exports = \"header {\\n  background: #F7F8FA;\\n  border-bottom: 1px solid black; }\\n  header a {\\n    color: #525A65; }\\n  header .logo {\\n    font-weight: bold; }\\n  header nav {\\n    justify-self: right; }\\n  header nav ul {\\n      list-style-type: none;\\n      margin: 0;\\n      padding: 0; }\\n  header nav ul li {\\n        float: left; }\\n  header nav ul li a {\\n          padding: 1.5em;\\n          text-transform: uppercase;\\n          font-size: .8em; }\\n  header nav ul li a:hover {\\n            background: rgba(213, 215, 218, 0.801); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L0M6XFxVc2Vyc1xcYnF4cDgzXFxEZXNrdG9wXFxNQ29kZVxcUGVvcGxlQmFua1xcZnJvbnRlbmQvc3JjXFxhcHBcXG5hdlxcbmF2LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQW1CO0VBQ25CLDhCQUE4QixFQUFBO0VBRmxDO0lBS1EsY0FBYyxFQUFBO0VBTHRCO0lBU1EsaUJBQWlCLEVBQUE7RUFUekI7SUFhUSxtQkFBbUIsRUFBQTtFQWIzQjtNQWdCWSxxQkFBcUI7TUFDckIsU0FBUztNQUFFLFVBQVUsRUFBQTtFQWpCakM7UUFvQmdCLFdBQVcsRUFBQTtFQXBCM0I7VUF1Qm9CLGNBQWM7VUFDZCx5QkFBeUI7VUFDekIsZUFBZSxFQUFBO0VBekJuQztZQTRCd0Isc0NBQXNDLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9uYXYvbmF2LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaGVhZGVyIHtcclxuICAgIGJhY2tncm91bmQ6ICNGN0Y4RkE7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICBcclxuICAgIGEge1xyXG4gICAgICAgIGNvbG9yOiAjNTI1QTY1O1xyXG4gICAgfVxyXG5cclxuICAgIC5sb2dvIHtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIH1cclxuXHJcbiAgICBuYXYge1xyXG4gICAgICAgIGp1c3RpZnktc2VsZjogcmlnaHQ7XHJcbiAgICBcclxuICAgICAgICB1bCB7XHJcbiAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgICAgICAgICAgbWFyZ2luOiAwOyBwYWRkaW5nOiAwO1xyXG5cclxuICAgICAgICAgICAgbGkge1xyXG4gICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcblxyXG4gICAgICAgICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMS41ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IC44ZW07XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDIxMywgMjE1LCAyMTgsIDAuODAxKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.scss']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Hero } from './hero';\r\n\r\nconst api = '/api';\r\nconst baseURL = 'http://localhost:4000';\r\n\r\n@Injectable()\r\nexport class HeroService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getHeroes() {\r\n    return this.http.get<Array<Hero>>(`${baseURL}${api}/people`);\r\n  }\r\n\r\n  deleteHero(hero: Hero) {\r\n    return this.http.delete(`${baseURL}${api}/person/${hero.id}`);\r\n  }\r\n\r\n  addHero(hero: Hero) {\r\n    return this.http.post<Hero>(`${baseURL}${api}/person/`, hero);\r\n  }\r\n\r\n  updateHero(hero: Hero) {\r\n    return this.http.put<Hero>(`${baseURL}${api}/person/${hero.id}`, hero);\r\n  }\r\n}\r\n","export class Hero {\r\n  id: number;\r\n  name: string;\r\n  saying: string;\r\n}\r\n","module.exports = \"<div>\\r\\n  <ul class=\\\"heroes\\\">\\r\\n    <li *ngFor=\\\"let hero of heroes\\\" (click)=\\\"onSelect(hero)\\\" [class.selected]=\\\"hero === selectedHero\\\">\\r\\n      <button class=\\\"delete-button\\\" (click)=\\\"deleteHero(hero)\\\">Delete</button>\\r\\n      <div class=\\\"hero-element\\\">\\r\\n        <div class=\\\"badge\\\">{{hero.id}}</div>\\r\\n        <div class=\\\"name\\\">{{hero.name}}</div>\\r\\n        <div class=\\\"saying\\\">{{hero.saying}}</div>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <div class=\\\"editarea\\\">\\r\\n    <button (click)=\\\"enableAddMode()\\\">Add New Hero</button>\\r\\n    <div *ngIf=\\\"selectedHero\\\">\\r\\n      <div class=\\\"editfields\\\">\\r\\n        <div>\\r\\n          <label>id: </label>\\r\\n          <input [(ngModel)]=\\\"selectedHero.id\\\" placeholder=\\\"id\\\" *ngIf=\\\"addingHero\\\" />\\r\\n          <label *ngIf=\\\"!addingHero\\\" class=\\\"value\\\">{{selectedHero.id}}</label>\\r\\n        </div>\\r\\n        <div>\\r\\n          <label>name: </label>\\r\\n          <input [(ngModel)]=\\\"selectedHero.name\\\" placeholder=\\\"name\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n          <label>saying: </label>\\r\\n          <input [(ngModel)]=\\\"selectedHero.saying\\\" placeholder=\\\"saying\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      <button (click)=\\\"save()\\\">Save</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QvdGVzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Hero } from './hero';\r\nimport { HeroService } from './hero.service';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TESTComponent implements OnInit {\r\n\r\n  addingHero = false;\r\n  heroes: any = [];\r\n  selectedHero: Hero;\r\n\r\n  constructor(private heroService: HeroService) {}\r\n\r\n  ngOnInit() {\r\n    this.getHeroes();\r\n  }\r\n\r\n  cancel() {\r\n    this.addingHero = false;\r\n    this.selectedHero = null;\r\n  }\r\n\r\n  deleteHero(hero: Hero) {\r\n    this.heroService.deleteHero(hero).subscribe(res => {\r\n      this.heroes = this.heroes.filter(h => h !== hero);\r\n      if (this.selectedHero === hero) {\r\n        this.selectedHero = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  getHeroes() {\r\n    return this.heroService.getHeroes().subscribe(heroes => {\r\n      this.heroes = heroes;\r\n    });\r\n  }\r\n\r\n  enableAddMode() {\r\n    this.addingHero = true;\r\n    this.selectedHero = new Hero();\r\n  }\r\n\r\n  onSelect(hero: Hero) {\r\n    this.addingHero = false;\r\n    this.selectedHero = hero;\r\n  }\r\n\r\n  save() {\r\n    if (this.addingHero) {\r\n      this.heroService.addHero(this.selectedHero).subscribe(hero => {\r\n        this.addingHero = false;\r\n        this.selectedHero = null;\r\n        this.heroes.push(hero);\r\n      });\r\n    } else {\r\n      this.heroService.updateHero(this.selectedHero).subscribe(hero => {\r\n        this.addingHero = false;\r\n        this.selectedHero = null;\r\n      });\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs'\r\n\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}